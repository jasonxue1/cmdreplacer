name: Build & Release CommandReplacer

on:
  push:
    branches: [ main, master ]
    tags:     [ '*' ]      # 打任何 tag（如 1.0.0）都会触发 Release

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      jar-name: ${{ steps.rename.outputs.jar }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Java 8 带 Pack200，ForgeGradle 2.1 必需
      - name: Set up Java 8
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '8'

      # 安装系统 Gradle
      - name: Install Gradle
        run: sudo apt-get update && sudo apt-get install -y gradle

      # ★ 一次性解压 MCP & 拉 Forge 依赖（关键步骤）
      - name: Prepare Forge workspace
        run: gradle setupCIWorkspace --no-daemon

      # 真正编译
      - name: Build mod
        run: gradle build --no-daemon --quiet

      # 重命名 JAR
      - name: Rename JAR
        id: rename
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          TARGET="cmdreplacer_1.8.9_${TAG}.jar"
          mv build/libs/cmdreplacer-*.jar build/libs/${TARGET}
          echo "jar=${TARGET}" >> $GITHUB_OUTPUT

  release:
    needs: build
    if: startsWith(github.ref,'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name:      ${{ github.ref_name }}
          release_name:  "CommandReplacer ${{ github.ref_name }}"

      - name: Upload mod JAR
        uses: actions/upload-release-asset@v1
        with:
          upload_url:    ${{ steps.create_release.outputs.upload_url }}
          asset_path:    build/libs/${{ needs.build.outputs.jar-name }}
          asset_name:    ${{ needs.build.outputs.jar-name }}
          asset_content_type: application/java-archive
