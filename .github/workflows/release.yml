name: Build & Release CommandReplacer

on:
  push:
    branches: [ main, master ]
    tags:     [ '*' ]                 # 任何 tag（如 1.0.0）都会触发 Release

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      jar-name: ${{ steps.rename.outputs.jar }}

    steps:
      # 1. 拉代码
      - name: Checkout
        uses: actions/checkout@v3

      # 2. Java 11 仍带 Pack200，且支持 --add‑opens
      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '11'

      # 3. 安装系统 Gradle（Ubuntu 包含 4.4.1，可兼容 ForgeGradle 2.1）
      - name: Install Gradle
        run: sudo apt-get update && sudo apt-get install -y gradle

      # 4. 一次性：解压 MCP & 拉 Forge 依赖；随后立即编译
      - name: Prepare workspace + Build
        env:
          GRADLE_OPTS: ""            # 清空可能的多余 JVM 参数
        run: |
          # 拉依赖并编译；--refresh-dependencies 确保首次构建能下载完整 Forge
          gradle --refresh-dependencies \
                 setupCIWorkspace \
                 build \
                 --no-daemon --quiet

      # 5. 重命名输出 Jar
      - name: Rename JAR
        id: rename
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          TARGET="cmdreplacer_1.8.9_${TAG}.jar"
          mv build/libs/cmdreplacer-*.jar build/libs/${TARGET}
          echo "jar=${TARGET}" >> $GITHUB_OUTPUT

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # 6. 创建 GitHub Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name:     ${{ github.ref_name }}
          release_name: "CommandReplacer ${{ github.ref_name }}"

      # 7. 上传编译产物
      - name: Upload JAR
        uses: actions/upload-release-asset@v1
        with:
          upload_url:   ${{ steps.create_release.outputs.upload_url }}
          asset_path:   build/libs/${{ needs.build.outputs.jar-name }}
          asset_name:   ${{ needs.build.outputs.jar-name }}
          asset_content_type: application/java-archive
